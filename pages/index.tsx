import { EditFilled } from '@ant-design/icons';
import useQueryParams from '@podenco/hooks/useQueryParams';
import styles from '@podenco/styles/Home.module.css';
import { Button } from 'antd';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useCallback, useState } from 'react';
import { useAsync, usePrevious } from 'react-use';

interface APIImage {
  id: string;
  author: string;
  width: number;
  height: number;
  url: string;
  download_url: string;
}

const generateAspectRatio = (link: string) => {
  const [width, height] = link.split('/').slice(-2);
  if (+width > 700) {
    return `700/${Math.floor((700 / +width) * +height)}`;
  }
  return `${width}/${height}`;
};

export default function Home() {
  const [data, setData] = useState<APIImage[] | null>(null);
  const router = useRouter();

  const [params, setParams] = useQueryParams();

  const memoizedSetParams = useCallback(setParams, []);

  const { page } = params;

  const previousPage = usePrevious(page);

  useAsync(async () => {
    if (!router.isReady || page === undefined) return;

    if (page === null) {
      memoizedSetParams({ page: '1' });
      return;
    }

    if (data && previousPage === page) return;

    const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/v2/list/?page=${page ?? 1}`);
    const imgData = await res.json();
    setData(imgData);
  }, [data, page, router.isReady, memoizedSetParams]);

  return (
    <>
      <Head>
        <title>Image Editor</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main className={styles.main}>
        <ul role="list" className={styles.imageGallery}>
          {data &&
            data.map((item, i) => {
              const aspectRatio = generateAspectRatio(item.download_url);
              return (
                <li key={item.id}>
                  <div className={styles.imageContainer}>
                    <Image
                      src={`${process.env.NEXT_PUBLIC_BASE_URL}/id/${item.id}/${aspectRatio}`}
                      alt="gallery image"
                      fill
                      priority={i < 1}
                      sizes="(max-width: 768px) 100vw,
                            (max-width: 1100px) 50vw,
                            33vw"
                    ></Image>
                  </div>
                  <figcaption>
                    <span>{item.author} </span>
                    <Link href={`/edit/${item.id}`}>
                      <Button className={styles.imageContainer__Button}>
                        <EditFilled />
                      </Button>
                    </Link>
                  </figcaption>
                </li>
              );
            })}
        </ul>
        <div className={styles.actions}>
          <Button
            disabled={page !== null && page !== undefined ? !(+page > 1) : false}
            onClick={() =>
              page !== null && page !== undefined && setParams({ page: `${+page - 1}` })
            }
          >
            &lt;&lt;
          </Button>
          <div className={styles.actions__description}>Current Page: {router.query.page}</div>
          <Button
            onClick={() =>
              page !== null && page !== undefined && setParams({ page: `${+page + 1}` })
            }
          >
            &gt;&gt;
          </Button>
        </div>
      </main>
    </>
  );
}
